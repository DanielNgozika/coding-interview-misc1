"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const chai_1 = require("chai");
describe("RingBuffer", function () {
    it("basic", function () {
        const rb = new RingBuffer(3);
        chai_1.assert.isUndefined(rb.peek());
        rb.push(1);
        chai_1.assert.equal(rb.peek(), 1);
        chai_1.assert.equal(rb.pop(), 1);
        chai_1.assert.isUndefined(rb.peek());
    });
    it("lost data", function () {
        const rb = new RingBuffer(3);
        rb.push(1);
        rb.push(2);
        rb.push(3);
        rb.push(4);
        chai_1.assert.equal(rb.pop(), 4);
        chai_1.assert.equal(rb.pop(), 3);
        chai_1.assert.equal(rb.pop(), 2);
        chai_1.assert.isUndefined(rb.pop());
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmluZ0J1ZmZlclRlc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJSaW5nQnVmZmVyVGVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUE0QjtBQUU1QixRQUFRLENBQUMsWUFBWSxFQUFFO0lBRW5CLEVBQUUsQ0FBQyxPQUFPLEVBQUU7UUFFUixNQUFNLEVBQUUsR0FBRyxJQUFJLFVBQVUsQ0FBUyxDQUFDLENBQUMsQ0FBQztRQUVyQyxhQUFNLENBQUMsV0FBVyxDQUFDLEVBQUUsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDO1FBRTlCLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDWCxhQUFNLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUUzQixhQUFNLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUUxQixhQUFNLENBQUMsV0FBVyxDQUFDLEVBQUUsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBRWxDLENBQUMsQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLFdBQVcsRUFBRTtRQUVaLE1BQU0sRUFBRSxHQUFHLElBQUksVUFBVSxDQUFTLENBQUMsQ0FBQyxDQUFDO1FBQ3JDLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDWCxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ1gsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNYLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFFWCxhQUFNLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUMxQixhQUFNLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUMxQixhQUFNLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUMxQixhQUFNLENBQUMsV0FBVyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDO0lBRWpDLENBQUMsQ0FBQyxDQUFDO0FBRVAsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2Fzc2VydH0gZnJvbSAnY2hhaSc7XHJcblxyXG5kZXNjcmliZShcIlJpbmdCdWZmZXJcIiwgZnVuY3Rpb24oKSB7XHJcblxyXG4gICAgaXQoXCJiYXNpY1wiLCBmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgICAgIGNvbnN0IHJiID0gbmV3IFJpbmdCdWZmZXI8bnVtYmVyPigzKTtcclxuXHJcbiAgICAgICAgYXNzZXJ0LmlzVW5kZWZpbmVkKHJiLnBlZWsoKSk7XHJcblxyXG4gICAgICAgIHJiLnB1c2goMSk7XHJcbiAgICAgICAgYXNzZXJ0LmVxdWFsKHJiLnBlZWsoKSwgMSk7XHJcblxyXG4gICAgICAgIGFzc2VydC5lcXVhbChyYi5wb3AoKSwgMSk7XHJcblxyXG4gICAgICAgIGFzc2VydC5pc1VuZGVmaW5lZChyYi5wZWVrKCkpO1xyXG5cclxuICAgIH0pO1xyXG5cclxuICAgIGl0KFwibG9zdCBkYXRhXCIsIGZ1bmN0aW9uKCkge1xyXG5cclxuICAgICAgICBjb25zdCByYiA9IG5ldyBSaW5nQnVmZmVyPG51bWJlcj4oMyk7XHJcbiAgICAgICAgcmIucHVzaCgxKTtcclxuICAgICAgICByYi5wdXNoKDIpO1xyXG4gICAgICAgIHJiLnB1c2goMyk7XHJcbiAgICAgICAgcmIucHVzaCg0KTtcclxuXHJcbiAgICAgICAgYXNzZXJ0LmVxdWFsKHJiLnBvcCgpLCA0KTtcclxuICAgICAgICBhc3NlcnQuZXF1YWwocmIucG9wKCksIDMpO1xyXG4gICAgICAgIGFzc2VydC5lcXVhbChyYi5wb3AoKSwgMik7XHJcbiAgICAgICAgYXNzZXJ0LmlzVW5kZWZpbmVkKHJiLnBvcCgpKTtcclxuXHJcbiAgICB9KTtcclxuXHJcbn0pO1xyXG4iXX0=